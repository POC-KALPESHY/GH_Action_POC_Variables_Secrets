name: Greeting on variable day

on:
  push:
    branches: [ "master","repo_variable_secret","sonar_script","slack-notification","runner" ]
  pull_request:    

env:
  DAY_OF_WEEK: Monday

jobs:
  greeting_job:
    runs-on: self-hosted
    env:
      Greeting: Hello
    steps:
      - name: "Say Hello Kalpesh it's Monday"
        if: ${{ env.DAY_OF_WEEK == 'Monday' }}
        run: |
          echo "$Greeting $First_Name. Today is $DAY_OF_WEEK!"
          echo "${{ vars.MY_DEMO_VARIABLE }} is demo variable"
          echo "${{ secrets.MY_SECRET_DEMO }} is my secret "
        env:
          First_Name: Kalpesh

  build:
    name: Build and Sonar Analysis
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_GHACTION }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL_NGROK }}        
        run: bash sonar_script.sh          
                        
  notification:
    name: Send notification on Slack using Webhooks
    needs: build
    runs-on: self-hosted
    if: ${{ always() }}
    steps:
      - name: Print Job Status
        run: |
          if ($env:LASTEXITCODE -eq 0) {
            Write-Output "Build succeeded"
          } else {
            Write-Output "Build failed"
          }
    
      - name: Send Slack notification on success
        if: ${{ always() && success() }}
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: '{"text": "Git push done in the repo. Maven project built successfully."}'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    
      - name: Send Slack notification on failure
        if: ${{ failure() }}
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: '{"text": "Git push done in the repo. Maven build failed. Please check the build logs for details."}'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  
# Below code is for ubuntu server
#   notification:
#     name: Send notification on Slack using Webhooks
#     needs: build
#     runs-on: self-hosted
#     if: ${{ always() }}
#     steps:
#       - name: Print Job Status
#         run: |
#           if [ ${{ steps.build.outcome }} == 'failure' ]; then
#             echo "Build failed"
#           else
#             echo "Build succeeded"
#           fi
    
#       - name: Send Slack notification on success
#         if: ${{ always() && success() }}
#         uses: slackapi/slack-github-action@v1.24.0
#         with:
#           payload: '{"text": "Git push done in the repo. Maven project built successfully."}'
#         env:
#           SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    
#       - name: Send Slack notification on failure
#         if: ${{ failure() }}
#         uses: slackapi/slack-github-action@v1.24.0
#         with:
#           payload: '{"text": "Git push done in the repo. Maven build failed. Please check the build logs for details."}'
#         env:
#           SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
